{"version":3,"sources":["components/Footer.jsx","actions/userActions.js","actions/types.js","components/SearchBox.jsx","components/Header.jsx","components/Rating.jsx","components/Product.jsx","actions/productActions.js","components/Message.jsx","components/Loader.jsx","components/Paginate.jsx","components/ProductCarousel.jsx","screens/HomeScreen.jsx","screens/ProductScreen.jsx","actions/cartActions.js","screens/CartScreen.jsx","components/FormContainer.jsx","screens/LoginScreen.jsx","screens/RegisterScreen.jsx","actions/orderActions.js","screens/ProfileScreen.jsx","components/CheckoutSteps.jsx","screens/ShippingScreen.jsx","screens/paymentScreen.jsx","screens/PlaceOrderScreen.jsx","screens/OrderScreen.jsx","screens/UserListScreen.jsx","screens/UserEditScreen.jsx","screens/ProductListScreen.jsx","screens/ProductEditScreen.jsx","screens/OrderListScreen.jsx","App.jsx","serviceWorker.js","store.js","reducers/productsReducers.js","reducers/cartReducers.js","reducers/userReducer.js","reducers/orderReducers.js","index.js"],"names":["Footer","Container","className","Row","Col","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","message","response","error","SearchBox","history","useState","keyword","setKeyword","Form","inline","onSubmit","e","preventDefault","trim","push","Control","onChange","target","value","name","placeholder","Button","variant","Header","location","useSelector","state","loading","useDispatch","Navbar","bg","expand","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","style","marginLeft","NavDropdown","alignRight","title","Item","onClick","go","localStorage","removeItem","isAdmin","Star","gt","color","defaultProps","Rating","text","Product","product","image","includes","Card","_id","Img","src","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","listProductsDetails","Message","props","Alert","margin","Loader","display","justifyContent","Spinner","animation","Paginate","pages","page","Pagination","Array","keys","map","n","key","active","ProductCarousel","productTopRated","products","useEffect","Carousel","pause","Image","fluid","alt","Caption","HomeScreen","match","params","productList","Helmet","content","sm","md","lg","xl","ProductScreen","quantity","setQuantity","setRating","comment","setComment","productDetails","productReviewCreate","success","createReviewError","ListGroup","description","countInStock","x","disabled","reviews","length","status","review","createdAt","substring","post","Group","Label","default","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","productId","search","Number","split","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","FromContainer","xs","children","LoginScreen","email","setEmail","password","setPassword","redirect","login","InputGroup","Prepend","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","getOrderDetails","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","orders","loadingOrders","errorOrders","patch","updateUserProfile","Table","striped","bordered","hover","responsive","order","slice","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","country","setCountry","postalCode","setPostalCode","padding","controlId","required","PaymentScreen","paymentMethod","setPaymentMethod","Check","custom","label","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","toFixed","orderCreate","cartItem","index","console","log","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","append","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","block","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","userUpdate","updateLoading","updateError","updateSuccess","setIsAdmin","alert","updateUser","checked","ProductListScreen","productDelete","errorDelete","productCreate","successCreate","createdProduct","deleteProduct","createProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","updateProduct","File","OrderListScreen","orderList","App","component","path","exact","Boolean","hostname","appReducer","combineReducers","action","doesExists","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","undefined","composeWithDevTools","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.35b06acc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container className=\"mx-auto\">\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        <p>copyright &copy; FxShop 2020</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport * as actions from \"../actions/types\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: actions.USER_LOGIN_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/users/login\",\r\n            { email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: actions.USER_LOGIN_SUCCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        const message = error.response.data.error;\r\n        dispatch({ type: actions.USER_LOGIN_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: actions.USER_REGISTER_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/users/\",\r\n            { email, name, password },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: actions.USER_REGISTER_SUCCESS, payload: data });\r\n        dispatch({ type: actions.USER_LOGIN_SUCCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        const message = error.response.data.error;\r\n        dispatch({ type: actions.USER_REGISTER_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: actions.USER_DETAILS_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({ type: actions.USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.response.data.error;\r\n        dispatch({ type: actions.USER_DETAILS_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: actions.USER_UPDATE_PROFILE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.patch(`/api/users/profile`, user, config);\r\n        dispatch({ type: actions.USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n        dispatch({ type: actions.USER_LOGIN_SUCCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        const message = error.response.data.error;\r\n        dispatch({ type: actions.USER_UPDATE_PROFILE_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: actions.USER_LIST_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/`, config);\r\n        dispatch({ type: actions.USER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.response.data.error;\r\n        dispatch({ type: actions.USER_LIST_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: actions.USER_DELETE_REQUEST });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.delete(`/api/users/${id}`, config);\r\n        dispatch({ type: actions.USER_DELETE_SUCCESS, success: true });\r\n    } catch (error) {\r\n        const message = error.response.data.error;\r\n        dispatch({ type: actions.USER_DELETE_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: actions.USER_UPDATE_REQUEST });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.patch(\r\n            `/api/users/${user._id}/edit`,\r\n            user,\r\n            config\r\n        );\r\n        dispatch({ type: actions.USER_UPDATE_SUCCESS, success: true });\r\n        dispatch({ type: actions.USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.response.data.error;\r\n        dispatch({ type: actions.USER_DELETE_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    localStorage.removeItem(\"cartItems\");\r\n    localStorage.removeItem(\"paymentMethod\");\r\n    localStorage.removeItem(\"shippingAddress\");\r\n    dispatch({ type: actions.USER_LOGOUT });\r\n    dispatch({ type: actions.USER_DETAILS_RESET });\r\n    dispatch({ type: actions.ORDER_LIST_MY_RESET });\r\n    dispatch({ type: actions.DESTROY_STORE });\r\n};\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n\r\nexport const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGIN_REQUEST\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\nexport const ORDER_DETAILS_RESET = \"ORDER_DETAILS_RESET\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n\r\nexport const DESTROY_STORE = \"DESTROY_STORE\";\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword.trim()}`);\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form inline onSubmit={submitHandler}>\r\n            <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                name=\"q\"\r\n                placeholder=\"Search Products...\"\r\n                className=\"mr-sm-2\"\r\n            ></Form.Control>\r\n            <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport {\r\n    Navbar,\r\n    NavDropdown,\r\n    Nav,\r\n    Form,\r\n    Container,\r\n    FormControl,\r\n    Button,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { LinkContainer, Link } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst Header = ({ history, location }) => {\r\n    const { userInfo, error, loading } = useSelector(\r\n        (state) => state.userLogin\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutHandler = () => {\r\n        history.push(\"/\");\r\n        history.go(0);\r\n        dispatch(logout());\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>FxShop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Route\r\n                        render={({ history }) => (\r\n                            <SearchBox history={history}></SearchBox>\r\n                        )}\r\n                    />\r\n                    <Nav className=\"ml-auto\">\r\n                        <LinkContainer to=\"/cart\">\r\n                            <Nav.Link>\r\n                                <i className=\"fas fa-shopping-cart\"></i>\r\n                                <span style={{ marginLeft: \"10px\" }}>CART</span>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                        {userInfo ? (\r\n                            <NavDropdown alignRight title={userInfo.name}>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <NavDropdown.Item onClick={logoutHandler}>\r\n                                    Logout\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                            <LinkContainer to=\"/login\">\r\n                                <Nav.Link>\r\n                                    <i className=\"fas fa-user\"></i>\r\n                                    <span style={{ marginLeft: \"10px\" }}>\r\n                                        LOGIN\r\n                                    </span>\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                        )}\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown alignRight title=\"Admin\">\r\n                                <LinkContainer to=\"/admin/userList\">\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to=\"/admin/productList\">\r\n                                    <NavDropdown.Item>\r\n                                        Products\r\n                                    </NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to=\"/admin/orderList\">\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        )}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Star = ({ value, gt, color }) => (\r\n    <span>\r\n        <i\r\n            style={{ color }}\r\n            className={\r\n                value >= gt\r\n                    ? \"fas fa-star\"\r\n                    : value >= gt - 0.5\r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n            }\r\n        ></i>\r\n    </span>\r\n);\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <Star value={value} gt={1} />\r\n            <Star value={value} gt={2} />\r\n            <Star value={value} gt={3} />\r\n            <Star value={value} gt={4} />\r\n            <Star value={value} gt={5} />\r\n            <p>{text ? text : \"\"}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nStar.defaultProps = {\r\n    color: \"#f8e825\",\r\n};\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating.jsx\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Product = ({ product }) => {\r\n    const image = product.image.includes(\"uploads\")\r\n        ? `/${product.image}`\r\n        : product.image;\r\n\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={image} variant=\"top\" />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title style={{ color: \"black\" }} as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`}\r\n                        color=\"red\"\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import axios from \"axios\";\r\nimport * as action from \"./types\";\r\n\r\nexport const listProducts = (keyword = \"\", pageNumber = 0) => async (\r\n    dispatch\r\n) => {\r\n    try {\r\n        dispatch({ type: action.PRODUCT_LIST_REQUEST });\r\n        const { data } = await axios.get(\r\n            `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n        );\r\n        dispatch({ type: action.PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: action.PRODUCT_LIST_FAIL, payload: error });\r\n    }\r\n};\r\n\r\nexport const listProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: action.PRODUCT_DETAILS_REQUEST });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n        dispatch({ type: action.PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: action.PRODUCT_DETAILS_FAIL, payload: error });\r\n    }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: action.PRODUCT_DELETE_REQUEST });\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n        await axios.delete(`/api/products/${id}`, config);\r\n        dispatch({ type: action.PRODUCT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({ type: action.PRODUCT_DELETE_FAIL, payload: error });\r\n    }\r\n};\r\n\r\nexport const createProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: action.PRODUCT_CREATE_REQUEST });\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n        const { data } = await axios.post(`/api/products/`, product, config);\r\n        dispatch({ type: action.PRODUCT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: action.PRODUCT_CREATE_FAIL, payload: error });\r\n    }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: action.PRODUCT_UPDATE_REQUEST });\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n        const { data } = await axios.patch(\r\n            `/api/products/${product._id}`,\r\n            product,\r\n            config\r\n        );\r\n        dispatch({ type: action.PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: action.PRODUCT_UPDATE_FAIL, payload: error });\r\n    }\r\n};\r\n\r\nexport const createReview = (id, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: action.PRODUCT_CREATE_REVIEW_REQUEST });\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n        await axios.post(`/api/products/${id}/reviews`, review, config);\r\n        dispatch({ type: action.PRODUCT_CREATE_REVIEW_SUCCESS, success: true });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: action.PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: action.PRODUCT_TOP_REQUEST });\r\n        const { data } = await axios.get(`/api/products/top`);\r\n        dispatch({ type: action.PRODUCT_TOP_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: action.PRODUCT_TOP_FAIL, payload: error });\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <Alert style={{ margin: \"10px\" }} variant={props.variant || \"danger\"}>\r\n            {props.message}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Container, Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Container\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n            }}\r\n        >\r\n            <Spinner\r\n                style={{ margin: \"10px\" }}\r\n                animation=\"border\"\r\n                variant=\"primary\"\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import pagination, { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport React from \"react\";\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword }) => {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((n) => (\r\n                    <LinkContainer\r\n                        key={n + 1}\r\n                        to={\r\n                            !isAdmin\r\n                                ? keyword\r\n                                    ? `/search/${keyword}/page/${n + 1}`\r\n                                    : `/page/${n + 1}`\r\n                                : `/admin/productList/${n + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={n + 1 === page}>\r\n                            {n + 1}\r\n                        </Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\nimport { listTopProducts } from \"../actions/productActions\";\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products } = useSelector(\r\n        (state) => state.productTopRated\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts());\r\n    }, [dispatch]);\r\n\r\n    if (loading) {\r\n        return <Loader />;\r\n    } else if (error) {\r\n        return <Message message={error} />;\r\n    } else {\r\n        return (\r\n            <Carousel\r\n                pause=\"hover\"\r\n                className=\"bg-dark text-center justify-content-center mt-3\"\r\n            >\r\n                {products.map((product) => (\r\n                    <Carousel.Item key={product._id}>\r\n                        <Link to={`/product/${product._id}`}>\r\n                            <Image\r\n                                fluid\r\n                                src={\r\n                                    product.image.includes(\"uploads\")\r\n                                        ? `/${product.image}`\r\n                                        : product.image\r\n                                }\r\n                                alt={product.name}\r\n                            />\r\n                            <Carousel.Caption className=\"carousel-caption\">\r\n                                <h2>\r\n                                    {product.name} ({product.price})\r\n                                </h2>\r\n                            </Carousel.Caption>\r\n                        </Link>\r\n                    </Carousel.Item>\r\n                ))}\r\n            </Carousel>\r\n        );\r\n    }\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Spinner, Container } from 'react-bootstrap';\r\nimport Product from '../components/Product.jsx';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions.js';\r\nimport Message from '../components/Message.jsx';\r\nimport Loader from '../components/Loader.jsx';\r\nimport Paginate from '../components/Paginate.jsx';\r\nimport ProductCarousel from '../components/ProductCarousel.jsx';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n    const { products, loading, error, page, pages } = useSelector(\r\n        (state) => state.productList\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber));\r\n    }, [dispatch, pageNumber, keyword]);\r\n\r\n    if (error) {\r\n        return <Message message={error.message} />;\r\n    }\r\n\r\n    if (!loading) {\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>Welcome to FxShop</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"the best online store and shop for purchase electronic devices around the world.\"\r\n                    />\r\n                </Helmet>\r\n                {!keyword && <ProductCarousel />}\r\n                <h1>Latest products</h1>\r\n                <Row>\r\n                    {products.map((product) => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Paginate\r\n                    pages={pages}\r\n                    page={page}\r\n                    keyword={keyword ? keyword : ''}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n\r\n    return <Loader></Loader>;\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Image,\r\n    ListGroup,\r\n    Card,\r\n    Button,\r\n    Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating.jsx\";\r\nimport axios from \"axios\";\r\nimport { createReview, listProductsDetails } from \"../actions/productActions\";\r\nimport Message from \"../components/Message.jsx\";\r\nimport Loader from \"../components/Loader.jsx\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../actions/types.js\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState(\"\");\r\n\r\n    const { product, error, loading } = useSelector(\r\n        (state) => state.productDetails\r\n    );\r\n\r\n    const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n    const {\r\n        success,\r\n        error: createReviewError,\r\n        loading: createReviewLoading,\r\n    } = useSelector((state) => state.productReviewCreate);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n        if (success) {\r\n            setRating(0);\r\n            setComment(0);\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n        }\r\n\r\n        dispatch(listProductsDetails(match.params.id));\r\n    }, [dispatch, success, match]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${quantity}`);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(createReview(match.params.id, { comment, rating }));\r\n    };\r\n\r\n    if (error) {\r\n        return <Message message={error.message} />;\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className=\"btn btn-light my-3\" to=\"/\">\r\n                Go Back\r\n            </Link>\r\n            <Row>\r\n                <Col md={6} lg={4}>\r\n                    <Image\r\n                        fluid\r\n                        src={\r\n                            product.image?.includes(\"uploads\")\r\n                                ? `/${product.image}`\r\n                                : product.image\r\n                        }\r\n                        alt={product.name}\r\n                    />\r\n                </Col>\r\n                <Col md={6} lg={5}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating\r\n                                value={product.rating}\r\n                                text={`${product.numReviews} reviews`}\r\n                            />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Description: ${product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={12} lg={3}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Price</Col>\r\n                                <Col>\r\n                                    <strong>${product.price}</strong>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Status:</Col>\r\n                                <Col>\r\n                                    {product.countInStock > 0\r\n                                        ? \"In Stock\"\r\n                                        : \"Out of Stock\"}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {product.countInStock > 0 && (\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Quantity:</Col>\r\n                                    <Col>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={quantity}\r\n                                            onChange={(e) => {\r\n                                                setQuantity(e.target.value);\r\n                                            }}\r\n                                        >\r\n                                            {[\r\n                                                ...Array(\r\n                                                    product.countInStock\r\n                                                ).keys(),\r\n                                            ].map((x) => (\r\n                                                <option\r\n                                                    key={x + 1}\r\n                                                    value={x + 1}\r\n                                                >\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                onClick={addToCartHandler}\r\n                                disabled={product.countInStock === 0}\r\n                                type=\"button\"\r\n                                className=\"btn-block btn-dark\"\r\n                            >\r\n                                add to cart\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h2>Reviews</h2>\r\n                    {product.reviews && product.reviews.length === 0 && (\r\n                        <Message variant=\"info\" message=\"no reviews\" />\r\n                    )}\r\n                    {createReviewError && createReviewError.status === 400 && (\r\n                        <Message message=\"product already reviewed\" />\r\n                    )}\r\n                    <ListGroup variant=\"flush\">\r\n                        {product.reviews &&\r\n                            product.reviews.map((review) => (\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} />\r\n                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        <ListGroup.Item>\r\n                            <h2>Write a Customer Review</h2>\r\n                            {userInfo ? (\r\n                                <Form onSubmit={submitHandler}>\r\n                                    {createReviewError &&\r\n                                        createReviewError.response.status ===\r\n                                            400 && (\r\n                                            <Message\r\n                                                message={\r\n                                                    createReviewError.response\r\n                                                        .data.error\r\n                                                }\r\n                                            />\r\n                                        )}\r\n                                    <Form.Group>\r\n                                        <Form.Label>Rating</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={rating}\r\n                                            onChange={(e) =>\r\n                                                setRating(e.target.value)\r\n                                            }\r\n                                        >\r\n                                            <option default value=\"\">\r\n                                                Select...\r\n                                            </option>\r\n                                            <option value=\"1\">1 - poor</option>\r\n                                            <option value=\"2\">2 - fair</option>\r\n                                            <option value=\"3\">3 - good</option>\r\n                                            <option value=\"4\">\r\n                                                4 - very good\r\n                                            </option>\r\n                                            <option value=\"5\">\r\n                                                5 - excellent\r\n                                            </option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Comment</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"textarea\"\r\n                                            row=\"3\"\r\n                                            value={comment}\r\n                                            onChange={(e) =>\r\n                                                setComment(e.target.value)\r\n                                            }\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Button type=\"submit\" variant=\"dark\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form>\r\n                            ) : (\r\n                                <p>\r\n                                    Please <Link to=\"/login\">sign in</Link> to\r\n                                    write a review\r\n                                </p>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from \"axios\";\r\nimport * as actions from \"./types\";\r\n\r\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({ type: actions.CART_ADD_ITEM, payload: { ...data, quantity } });\r\n    localStorage.setItem(\r\n        \"cartItems\",\r\n        JSON.stringify(getState().cart.cartItems)\r\n    );\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({ type: actions.CART_REMOVE_ITEM, payload: { id } });\r\n    localStorage.setItem(\r\n        \"cartItems\",\r\n        JSON.stringify(getState().cart.cartItems)\r\n    );\r\n};\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({ type: actions.CART_SAVE_SHIPPING_ADDRESS, payload: data });\r\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({ type: actions.CART_SAVE_PAYMENT_METHOD, payload: data });\r\n    localStorage.setItem(\"paymentMethod\", data);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    ListGroup,\r\n    Form,\r\n    Button,\r\n    Card,\r\n    Image,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n    const quantity = location.search\r\n        ? Number(location.search.split(\"=\")[1])\r\n        : 1;\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector((state) => state.cart);\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, quantity));\r\n        }\r\n    }, [dispatch, productId, quantity]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id));\r\n    };\r\n\r\n    const checkoutHandler = () => {\r\n        history.push(\"/login?redirect=shipping\");\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message message=\"your cart is empty\" />\r\n                ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item._id}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item._id}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.quantity}\r\n                                            onChange={(e) => {\r\n                                                dispatch(\r\n                                                    addToCart(\r\n                                                        item._id,\r\n                                                        Number(e.target.value)\r\n                                                    )\r\n                                                );\r\n                                            }}\r\n                                        >\r\n                                            {[\r\n                                                ...Array(\r\n                                                    item.countInStock\r\n                                                ).keys(),\r\n                                            ].map((x) => (\r\n                                                <option\r\n                                                    key={x + 1}\r\n                                                    value={x + 1}\r\n                                                >\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            variant=\"light\"\r\n                                            onClick={() => {\r\n                                                removeFromCartHandler(item._id);\r\n                                            }}\r\n                                        >\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4} className=\"mt-3\">\r\n                <ListGroup>\r\n                    <ListGroup.Item>\r\n                        <h2>\r\n                            total Items (\r\n                            {cartItems.reduce((acc, item) => {\r\n                                return acc + item.quantity;\r\n                            }, 0)}\r\n                            )\r\n                        </h2>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>\r\n                            total Price: (\r\n                            {cartItems.reduce((acc, item) => {\r\n                                return acc + item.price * item.quantity;\r\n                            }, 0)}\r\n                            )\r\n                        </h2>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            onClick={checkoutHandler}\r\n                            className=\"btn-block\"\r\n                            disabled={cartItems.length === 0}\r\n                        >\r\n                            Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FromContainer = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\nexport default FromContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../actions/userActions\";\r\nimport FromContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, userInfo } = useSelector(\r\n        (state) => state.userLogin\r\n    );\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    };\r\n\r\n    return (\r\n        <FromContainer>\r\n            {error && <Message message={error}></Message>}\r\n            {loading && <Loader />}\r\n            <Form className=\"py-3\" onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Email address</Form.Label>\r\n\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                                <i className=\"fas fa-envelope\"></i>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={email}\r\n                            onChange={({ target }) => setEmail(target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>password</Form.Label>\r\n\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                                <i className=\"fas fa-key\"></i>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            value={password}\r\n                            onChange={({ target }) => setPassword(target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"dark\">\r\n                    Sign in\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New Customer?\r\n                    <Link\r\n                        to={\r\n                            redirect\r\n                                ? `/register/?redirect=${redirect}`\r\n                                : `/register`\r\n                        }\r\n                    >\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FromContainer>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Navbar,\r\n    NavDropdown,\r\n    Nav,\r\n    Form,\r\n    Container,\r\n    FormControl,\r\n    Button,\r\n    InputGroup,\r\n    Row,\r\n    Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer, Link } from \"react-router-dom\";\r\nimport { register } from \"../actions/userActions\";\r\nimport FromContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, userInfo } = useSelector(\r\n        (state) => state.userRegister\r\n    );\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage(\"passwords are not match\");\r\n        } else {\r\n            setMessage(null);\r\n            dispatch(register(name, email, password));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FromContainer>\r\n            {message && <Message message={message}></Message>}\r\n            {error && <Message message={error}></Message>}\r\n            {loading && <Loader />}\r\n            <Form className=\"py-3\" onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>name</Form.Label>\r\n\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                                <i className=\"fas fa-user\"></i>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            type=\"name\"\r\n                            placeholder=\"Enter name\"\r\n                            value={name}\r\n                            onChange={({ target }) => setName(target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Email address</Form.Label>\r\n\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                                <i className=\"fas fa-envelope\"></i>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={email}\r\n                            onChange={({ target }) => setEmail(target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>password</Form.Label>\r\n\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                                <i className=\"fas fa-key\"></i>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            value={password}\r\n                            onChange={({ target }) => setPassword(target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>confirm password</Form.Label>\r\n\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"confirm password\"\r\n                            value={confirmPassword}\r\n                            onChange={({ target }) =>\r\n                                setConfirmPassword(target.value)\r\n                            }\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"dark\">\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    <div>\r\n                        <span>Have an account? </span>\r\n                        <Link\r\n                            to={\r\n                                redirect\r\n                                    ? `/login/?redirect=${redirect}`\r\n                                    : `/login`\r\n                            }\r\n                        >\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </FromContainer>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import axios from \"axios\";\r\nimport * as actions from \"./types\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: actions.ORDER_CREATE_REQUEST });\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\"/api/orders\", order, config);\r\n        dispatch({ type: actions.ORDER_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: actions.ORDER_CREATE_FAIL, payload: error });\r\n    }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: actions.ORDER_DETAILS_REQUEST });\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n        const { data } = await axios.get(`/api/orders/${id}`, config);\r\n        dispatch({ type: actions.ORDER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: actions.ORDER_DETAILS_FAIL, payload: error });\r\n    }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({ type: actions.ORDER_PAY_REQUEST });\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n        const { data } = await axios.patch(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        );\r\n        dispatch({ type: actions.ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: actions.ORDER_PAY_FAIL, payload: error });\r\n    }\r\n};\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: actions.ORDER_DELIVER_REQUEST });\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n        const { data } = await axios.patch(\r\n            `/api/orders/${orderId}/deliver`,\r\n            {},\r\n            config\r\n        );\r\n        dispatch({ type: actions.ORDER_DELIVER_SUCCESS, success: true });\r\n    } catch (error) {\r\n        dispatch({ type: actions.ORDER_DELIVER_FAIL, payload: error });\r\n    }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: actions.ORDER_LIST_MY_REQUEST });\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n        const { data } = await axios.get(`/api/orders/myorders`, config);\r\n        dispatch({ type: actions.ORDER_LIST_MY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: actions.ORDER_LIST_MY_FAIL, payload: error });\r\n    }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: actions.ORDER_LIST_REQUEST });\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n        const { data } = await axios.get(`/api/orders/`, config);\r\n        dispatch({ type: actions.ORDER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: actions.ORDER_LIST_FAIL, payload: error });\r\n    }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, InputGroup, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport * as actions from \"../actions/types\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { updateUserProfile, getUserDetails } from \"../actions/userActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, user } = useSelector((state) => state.userDetails);\r\n\r\n    const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n    const { success } = useSelector((state) => state.userUpdateProfile);\r\n\r\n    const { orders, loading: loadingOrders, error: errorOrders } = useSelector(\r\n        (state) => state.orderListMy\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (!user.name || success) {\r\n                dispatch({ type: actions.USER_UPDATE_PROFILE_RESET });\r\n                dispatch(getUserDetails(\"profile\"));\r\n                dispatch(listMyOrders());\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, orders, success]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage(\"passwords are not match\");\r\n        } else {\r\n            setMessage(null);\r\n            dispatch(\r\n                updateUserProfile({\r\n                    id: user._id,\r\n                    name,\r\n                    email,\r\n                    password,\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col className=\"m-3\" md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message message={message}></Message>}\r\n                {error && <Message message={error}></Message>}\r\n                {success && (\r\n                    <Message\r\n                        variant=\"success\"\r\n                        message=\"Your profile updated successfully\"\r\n                    ></Message>\r\n                )}\r\n\r\n                {loading && <Loader />}\r\n                <Form className=\"py-3\" onSubmit={submitHandler}>\r\n                    <Form.Group>\r\n                        <Form.Label>name</Form.Label>\r\n\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <i className=\"fas fa-user\"></i>\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter name\"\r\n                                value={name}\r\n                                onChange={({ target }) => setName(target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Email address</Form.Label>\r\n\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <i className=\"fas fa-envelope\"></i>\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                value={email}\r\n                                onChange={({ target }) =>\r\n                                    setEmail(target.value)\r\n                                }\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>password</Form.Label>\r\n\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <i className=\"fas fa-key\"></i>\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Enter password\"\r\n                                value={password}\r\n                                onChange={({ target }) =>\r\n                                    setPassword(target.value)\r\n                                }\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>confirm password</Form.Label>\r\n\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <i className=\"fas fa-lock\"></i>\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"confirm password\"\r\n                                value={confirmPassword}\r\n                                onChange={({ target }) =>\r\n                                    setConfirmPassword(target.value)\r\n                                }\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant=\"dark\">\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col className=\"mt-3\" sm={12} md={8}>\r\n                <h2>My orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message message={errorOrders} />\r\n                ) : (\r\n                    <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className=\"table-sm\"\r\n                    >\r\n                        <thead>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.slice(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td className=\"text-center\">\r\n                                        {order.isPaid ? (\r\n                                            order.paidAt.slice(0, 10)\r\n                                        ) : (\r\n                                            <i\r\n                                                className=\"fas fa-times\"\r\n                                                style={{ color: \"red\" }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                        {order.isDelivered ? (\r\n                                            order.deliveredAt.slice(0, 10)\r\n                                        ) : (\r\n                                            <i\r\n                                                className=\"fas fa-times\"\r\n                                                style={{ color: \"red\" }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                        <LinkContainer\r\n                                            to={`/order/${order._id}`}\r\n                                        >\r\n                                            <Button variant=\"light\">\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign in</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to=\"/placeOrder\">\r\n                        <Nav.Link>place order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>place order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport FromContainer from \"../components/FormContainer\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const { shippingAddress } = useSelector((state) => state.cart);\r\n    const dispatch = useDispatch();\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n        history.push(\"/payment\");\r\n    };\r\n\r\n    return (\r\n        <FromContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1 style={{ padding: \"0\" }}>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                                <i className=\"fas fa-map-marked-alt\"></i>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter address\"\r\n                            value={address}\r\n                            required\r\n                            onChange={({ target }) => setAddress(target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                                <i className=\"fas fa-city\"></i>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter city\"\r\n                            value={city}\r\n                            required\r\n                            onChange={({ target }) => setCity(target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"postalCode\">\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                                <i className=\"fas fa-mail-bulk\"></i>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter postal code\"\r\n                            value={postalCode}\r\n                            required\r\n                            onChange={({ target }) =>\r\n                                setPostalCode(target.value)\r\n                            }\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                                <i className=\"fas fa-globe-asia\"></i>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter country\"\r\n                            value={country}\r\n                            required\r\n                            onChange={({ target }) => setCountry(target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"dark\" type=\"submit\">\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FromContainer>\r\n    );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport FromContainer from \"../components/FormContainer\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const { shippingAddress } = useSelector((state) => state.cart);\r\n    const dispatch = useDispatch();\r\n\r\n    if (!shippingAddress) {\r\n        history.push(\"/shipping\");\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push(\"/placeorder\");\r\n    };\r\n\r\n    return (\r\n        <FromContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1 style={{ padding: \"0\" }}>Payment</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            custom\r\n                            type=\"radio\"\r\n                            label=\"PayPal or Credit Card\"\r\n                            id=\"PayPal\"\r\n                            name=\"paymentMethod\"\r\n                            value=\"PayPal\"  \r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n\r\n                        <Form.Check\r\n                            custom\r\n                            type=\"radio\"\r\n                            label=\"Stripe\"\r\n                            id=\"Stripe\"\r\n                            name=\"paymentMethod\"\r\n                            value=\"Stripe\"\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"dark\" type=\"submit\">\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FromContainer>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Message from \"../components/Message\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector((state) => state.cart);\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => {\r\n        return acc + item.price * item.quantity;\r\n    }, 0);\r\n\r\n    const TAX = 0.04;\r\n    cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 100;\r\n    cart.taxPrice = Number((TAX * cart.itemsPrice).toFixed(2));\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2);\r\n\r\n    const { order, success, error } = useSelector((state) => state.orderCreate);\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`);\r\n        }\r\n    }, [success]);\r\n\r\n    const placeOrderHandler = () => {\r\n        console.log(cart.paymentMethod);\r\n        dispatch(\r\n            createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice,\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n            <Row>\r\n                <Col>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>{\" \"}\r\n                                {cart.shippingAddress.address},{\" \"}\r\n                                {cart.shippingAddress.city},{\" \"}\r\n                                {cart.shippingAddress.postalCode},{\" \"}\r\n                                {cart.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message message=\"your cart is empty\" />\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {cart.cartItems.map((cartItem, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        alt={cartItem.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                        src={cartItem.image}\r\n                                                    />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        style={{\r\n                                                            color: \"black\",\r\n                                                        }}\r\n                                                        to={`/product/${cartItem._id}`}\r\n                                                    >\r\n                                                        {cartItem.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {cartItem.quantity} x $\r\n                                                    {cartItem.price} = $\r\n                                                    {cartItem.price *\r\n                                                        cartItem.quantity}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items:</Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping:</Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax:</Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total Price:</Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            {error && <Message message={error}></Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                variant=\"dark\"\r\n                                type=\"button\"\r\n                                className=\"btn-block\"\r\n                                disabled={cart.cartItems.length === 0}\r\n                                onClick={placeOrderHandler}\r\n                            >\r\n                                Place Order\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image } from \"react-bootstrap\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n    createOrder,\r\n    getOrderDetails,\r\n    payOrder,\r\n    deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from \"../actions/types\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n    const { order, loading, error } = useSelector(\r\n        (state) => state.orderDetails\r\n    );\r\n\r\n    const { loading: loadingPay, success: successPay } = useSelector(\r\n        (state) => state.orderPay\r\n    );\r\n\r\n    const { loading: loadingDeliver, success: successDeliver } = useSelector(\r\n        (state) => state.orderDeliver\r\n    );\r\n\r\n    if (order) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => {\r\n            return acc + item.price * item.quantity;\r\n        }, 0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\");\r\n        }\r\n\r\n        if (!order || order._id !== orderId) {\r\n            dispatch(getOrderDetails(orderId));\r\n        }\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios(\"/api/config/paypal\");\r\n            const script = document.createElement(\"script\");\r\n            script.type = \"text/javascript\";\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n            script.async = true;\r\n            script.onload = () => setSdkReady(true);\r\n            document.body.append(script);\r\n        };\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET });\r\n            dispatch(getOrderDetails(orderId));\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript();\r\n            } else setSdkReady(true);\r\n        }\r\n    }, [dispatch, orderId, successPay, successDeliver, order]);\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order._id));\r\n    };\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult));\r\n    };\r\n\r\n    if (loading) {\r\n        return <Loader></Loader>;\r\n    }\r\n    if (error) {\r\n        return <Message message={error}></Message>;\r\n    } else if (order) {\r\n        return (\r\n            <>\r\n                <h1>Order: {order._id}</h1>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name: {order.user.name}</strong>\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Email: </strong>{\" \"}\r\n                                    <a href={`mailto:${order.user.email}`}>\r\n                                        {order.user.email}\r\n                                    </a>\r\n                                </p>\r\n\r\n                                <p>\r\n                                    <strong>Address:</strong>{\" \"}\r\n                                    {order.shippingAddress.address},{\" \"}\r\n                                    {order.shippingAddress.city},{\" \"}\r\n                                    {order.shippingAddress.postalCode},{\" \"}\r\n                                    {order.country}\r\n                                    {order.isDelivered ? (\r\n                                        <Message\r\n                                            variant=\"success\"\r\n                                            message={`Delivered at ${order.deliveredAt}`}\r\n                                        />\r\n                                    ) : (\r\n                                        <Message message=\"Not Delivered\" />\r\n                                    )}\r\n                                </p>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <p>\r\n                                    <strong>Method: </strong>\r\n                                    {order.paymentMethod}\r\n                                </p>\r\n                                {order.isPaid ? (\r\n                                    <Message\r\n                                        variant=\"success\"\r\n                                        message={`paid at ${order.paidAt}`}\r\n                                    />\r\n                                ) : (\r\n                                    <Message message=\"Not Paid\" />\r\n                                )}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ? (\r\n                                    <Message message=\"Order is empty\" />\r\n                                ) : (\r\n                                    <ListGroup variant=\"flush\">\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image\r\n                                                            alt={item.name}\r\n                                                            fluid\r\n                                                            rounded\r\n                                                            src={item.image}\r\n                                                        />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link\r\n                                                            style={{\r\n                                                                color: \"black\",\r\n                                                            }}\r\n                                                            to={`/product/${item._id}`}\r\n                                                        >\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.quantity} x $\r\n                                                        {item.price} = $\r\n                                                        {item.price *\r\n                                                            item.quantity}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total Price:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader></Loader>}\r\n                                    {!sdkReady ? (\r\n                                        <Loader></Loader>\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            className=\"btn-block\"\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                    {loadingDeliver && <Loader />}\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                order.isPaid &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={deliverHandler}\r\n                                            block\r\n                                            variant=\"dark\"\r\n                                        >\r\n                                            Mark as Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    } else {\r\n        return <></>;\r\n    }\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { deleteUser, listUsers, register } from \"../actions/userActions\";\r\nimport FromContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector((state) => state.userList);\r\n    const { userInfo } = useSelector((state) => state.userLogin);\r\n    const { success: successDelete } = useSelector((state) => state.userDelete);\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers());\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [dispatch, history, successDelete]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete\")) {\r\n            dispatch(deleteUser(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message message={error} />\r\n            ) : (\r\n                <Table striped responsive bordered className=\"table-sm\" hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {users.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>\r\n                                    <a href={`mailto:${user.email}`}>\r\n                                        {user.email}\r\n                                    </a>\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                    {user.isAdmin ? (\r\n                                        <i\r\n                                            className=\"fas fa-check\"\r\n                                            style={{ color: \"green\" }}\r\n                                        >\r\n                                            {\" \"}\r\n                                        </i>\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"fas fa-times\"\r\n                                            style={{ color: \"red\" }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n\r\n                                <td className=\"text-center\">\r\n                                    <LinkContainer\r\n                                        to={`/admin/user/${user._id}/edit`}\r\n                                    >\r\n                                        <Button\r\n                                            variant=\"light\"\r\n                                            className=\"btn btn-sm\"\r\n                                        >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button\r\n                                        variant=\"danger\"\r\n                                        className=\"btn btn-sm\"\r\n                                        onClick={() => deleteHandler(user._id)}\r\n                                    >\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer, Link } from \"react-router-dom\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport * as actions from \"../actions/types\";\r\nimport FromContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id;\r\n\r\n    const { loading, error, user } = useSelector((state) => state.userDetails);\r\n    const { userInfo } = useSelector((state) => state.userLogin);\r\n    const {\r\n        loading: updateLoading,\r\n        error: updateError,\r\n        success: updateSuccess,\r\n    } = useSelector((state) => state.userUpdate);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (updateSuccess) {\r\n            dispatch({ type: actions.USER_UPDATE_RESET });\r\n            history.push(\"/admin/userList\");\r\n        } else {\r\n            if (userInfo._id === userId) {\r\n                window.alert(\"can not edit the current user!\");\r\n                history.push(\"/admin/userList\");\r\n                dispatch({ type: actions.USER_UPDATE_RESET });\r\n            }\r\n            if (!user.name || user._id !== userId) {\r\n                // check whether the user is not the current in the user details\r\n                dispatch(getUserDetails(userId));\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n                setIsAdmin(user.isAdmin);\r\n            }\r\n        }\r\n    }, [dispatch, history, userId, user, updateSuccess, userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/userList\" className=\"btn btn-light my-3\">\r\n                Go Back\r\n            </Link>\r\n\r\n            <FromContainer>\r\n                <h1 style={{ margin: \"0\", padding: \"0\" }}>Edit User</h1>\r\n                {updateLoading && <Loader />}\r\n                {updateError && <Message message={error} />}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message message={error} />\r\n                ) : (\r\n                    <Form className=\"py-3\" onSubmit={submitHandler}>\r\n                        <Form.Group>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <i className=\"fas fa-user\"></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={name}\r\n                                    onChange={({ target }) =>\r\n                                        setName(target.value)\r\n                                    }\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <i className=\"fas fa-envelope\"></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={email}\r\n                                    onChange={({ target }) =>\r\n                                        setEmail(target.value)\r\n                                    }\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Check\r\n                                custom\r\n                                type=\"checkbox\"\r\n                                label=\"Is Admin\"\r\n                                id=\"isAdmin\"\r\n                                value={isAdmin}\r\n                                onChange={({ target }) =>\r\n                                    setIsAdmin(target.checked)\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant=\"dark\">\r\n                            Edit\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FromContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { deleteUser, listUsers, register } from \"../actions/userActions\";\r\nimport FromContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n    createProduct,\r\n    deleteProduct,\r\n    listProducts,\r\n} from \"../actions/productActions\";\r\nimport * as actions from \"../actions/types\";\r\nimport Paginate from \"../components/Paginate\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n    const { loading, error, products, page, pages } = useSelector(\r\n        (state) => state.productList\r\n    );\r\n\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete,\r\n    } = useSelector((state) => state.productDelete);\r\n\r\n    const { success: successCreate, product: createdProduct } = useSelector(\r\n        (state) => state.productCreate\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: actions.PRODUCT_CREATE_RESET });\r\n        if (!userInfo.isAdmin) {\r\n            history.push(\"/login\");\r\n        }\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`);\r\n        } else {\r\n            dispatch(listProducts(\"\", pageNumber));\r\n        }\r\n    }, [\r\n        dispatch,\r\n        history,\r\n        userInfo,\r\n        successDelete,\r\n        successCreate,\r\n        createdProduct,\r\n        pageNumber,\r\n    ]);\r\n\r\n    const createProductHandler = (product) => {\r\n        dispatch(createProduct({}));\r\n    };\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete\")) {\r\n            dispatch(deleteProduct(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"my-3\"\r\n                        onClick={createProductHandler}\r\n                    >\r\n                        Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {errorDelete && <Message message={errorDelete}></Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message message={error} />\r\n            ) : (\r\n                <>\r\n                    <Table\r\n                        striped\r\n                        responsive\r\n                        bordered\r\n                        className=\"table-sm\"\r\n                        hover\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {products.map((product) => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td className=\"text-center\">\r\n                                        <LinkContainer\r\n                                            to={`/admin/product/${product._id}/edit`}\r\n                                        >\r\n                                            <Button\r\n                                                variant=\"light\"\r\n                                                className=\"btn btn-sm\"\r\n                                            >\r\n                                                <i className=\"fas fa-edit\"></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button\r\n                                            variant=\"danger\"\r\n                                            className=\"btn btn-sm\"\r\n                                            onClick={() =>\r\n                                                deleteHandler(product._id)\r\n                                            }\r\n                                        >\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate isAdmin={true} page={page} pages={pages} />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer, Link } from \"react-router-dom\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport * as actions from \"../actions/types\";\r\nimport FromContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listProductsDetails, updateProduct } from \"../actions/productActions\";\r\nimport axios from \"axios\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id;\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState(\"\");\r\n    const [brand, setBrand] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [countInStock, setCountInStock] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const { loading, error, product } = useSelector(\r\n        (state) => state.productDetails\r\n    );\r\n\r\n    const {\r\n        loading: updateLoading,\r\n        error: updateError,\r\n        success: updateSuccess,\r\n    } = useSelector((state) => state.productUpdate);\r\n\r\n    const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (updateSuccess) {\r\n            dispatch({ type: actions.PRODUCT_UPDATE_RESET });\r\n            history.push(\"/admin/productList\");\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductsDetails(productId));\r\n            } else {\r\n                setName(product.name);\r\n                setPrice(product.price);\r\n                setImage(product.image);\r\n                setBrand(product.brand);\r\n                setCategory(product.category);\r\n                setCountInStock(product.countInStock);\r\n                setDescription(product.description);\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, updateSuccess]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                category,\r\n                brand,\r\n                countInStock,\r\n                description,\r\n            })\r\n        );\r\n    };\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        setUploading(true);\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post(\"/api/upload\", formData, config);\r\n            setImage(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to=\"/admin/productList\" className=\"btn btn-light my-3\">\r\n                Go Back\r\n            </Link>\r\n\r\n            <FromContainer>\r\n                <h1 style={{ margin: \"0\", padding: \"0\" }}>Edit Product</h1>\r\n                {updateLoading && <Loader />}\r\n                {updateError && <Message message={updateError} />}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message message={error} />\r\n                ) : (\r\n                    <Form className=\"py-3\" onSubmit={submitHandler}>\r\n                        <Form.Group>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <i className=\"fas fa-signature\"></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={name}\r\n                                    onChange={({ target }) =>\r\n                                        setName(target.value)\r\n                                    }\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <i className=\"fas fa-money-check\"></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    placeholder=\"Enter price\"\r\n                                    value={price}\r\n                                    onChange={({ target }) =>\r\n                                        setPrice(target.value)\r\n                                    }\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <i className=\"fas fa-image\"></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter image url\"\r\n                                    value={image}\r\n                                    onChange={({ target }) =>\r\n                                        setImage(target.value)\r\n                                    }\r\n                                />\r\n                            </InputGroup>\r\n\r\n                            <Form.File\r\n                                id=\"image-file\"\r\n                                onChange={uploadFileHandler}\r\n                                custom\r\n                                label=\"Choose a file\"\r\n                            ></Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <i className=\"fas fa-copyright\"></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter brand\"\r\n                                    value={brand}\r\n                                    onChange={({ target }) =>\r\n                                        setBrand(target.value)\r\n                                    }\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <i className=\"fas fa-tags\"></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter category\"\r\n                                    value={category}\r\n                                    onChange={({ target }) =>\r\n                                        setCategory(target.value)\r\n                                    }\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <i className=\"fas fa-box-open\"></i>{\" \"}\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    placeholder=\"Enter Count In Stock\"\r\n                                    value={countInStock}\r\n                                    onChange={({ target }) =>\r\n                                        setCountInStock(target.value)\r\n                                    }\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <i className=\"fas fa-audio-description\"></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter description\"\r\n                                    value={description}\r\n                                    onChange={({ target }) =>\r\n                                        setDescription(target.value)\r\n                                    }\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant=\"dark\">\r\n                            Edit\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FromContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { deleteUser, listUsers, register } from \"../actions/userActions\";\r\nimport FromContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector((state) => state.orderList);\r\n    const { userInfo } = useSelector((state) => state.userLogin);\r\n    const { success: successDelete } = useSelector((state) => state.userDelete);\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders());\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [dispatch, history]);\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message message={error} />\r\n            ) : (\r\n                <Table striped responsive bordered className=\"table-sm\" hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL PRICE</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td className=\"text-center\">\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"fas fa-times\"\r\n                                            style={{ color: \"red\" }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n\r\n                                <td className=\"text-center\">\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"fas fa-times\"\r\n                                            style={{ color: \"red\" }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n\r\n                                <td className=\"text-center\">\r\n                                    <LinkContainer to={`/order/${order._id}/`}>\r\n                                        <Button\r\n                                            variant=\"light\"\r\n                                            className=\"btn btn-sm\"\r\n                                        >\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport \"./bootstrap.min.css\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/paymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\n\nconst App = () => {\n    return (\n        <Router>\n            <Route component={Header} />\n\n            <main>\n                <Container>\n                    <Route\n                        path=\"/admin/user/:id/edit\"\n                        component={UserEditScreen}\n                    />\n\n                    <Route\n                        path=\"/admin/product/:id/edit\"\n                        component={ProductEditScreen}\n                    />\n\n                    <Route path=\"/admin/userList\" component={UserListScreen} />\n                    <Route\n                        path=\"/admin/orderList\"\n                        component={OrderListScreen}\n                    />\n                    <Switch>\n                        <Route\n                            path=\"/admin/productList/:pageNumber\"\n                            component={ProductListScreen}\n                        />\n\n                        <Route\n                            path=\"/admin/productList\"\n                            component={ProductListScreen}\n                            exact\n                        />\n                    </Switch>\n\n                    <Route\n                        exact\n                        path=\"/search/:keyword\"\n                        component={HomeScreen}\n                    />\n                    <Route path=\"/order/:id\" component={OrderScreen} />\n                    <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n                    <Route path=\"/payment\" component={PaymentScreen}></Route>\n                    <Route path=\"/shipping\" component={ShippingScreen} />\n                    <Route exact path=\"/login\" component={LoginScreen} />\n                    <Route exact path=\"/\" component={HomeScreen} />\n                    <Route path=\"/page/:pageNumber\" component={HomeScreen} />\n                    <Route\n                        path=\"/search/:keyword/page/:pageNumber\"\n                        component={HomeScreen}\n                    />\n                    <Route path=\"/product/:id\" component={ProductScreen} />\n                    <Route path=\"/cart/:id?\" component={CartScreen} />\n                    <Route path=\"/register\" component={RegisterScreen} />\n                    <Route path=\"/profile\" component={ProfileScreen} />\n                </Container>\n            </main>\n            <Footer />\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopReducer,\r\n} from \"./reducers/productsReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n    userDeleteReducer,\r\n    userDetailsReducer,\r\n    userListReducer,\r\n    userReducer,\r\n    userRegistrationReducer,\r\n    userUpdateProfileReducer,\r\n    userUpdateReducer,\r\n} from \"./reducers/userReducer\";\r\nimport {\r\n    orderCreateReducer,\r\n    orderDeliverReducer,\r\n    orderDetailsReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderPayReducer,\r\n} from \"./reducers/orderReducers\";\r\nimport { DESTROY_STORE } from \"./actions/types\";\r\n\r\nconst appReducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopReducer,\r\n    cart: cartReducer,\r\n    userLogin: userReducer,\r\n    userList: userListReducer,\r\n    userRegister: userRegistrationReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === DESTROY_STORE) {\r\n        state = undefined; // reset the entire store\r\n    }\r\n    return appReducer(state, action);\r\n};\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n    : [];\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    : null;\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n    ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n    : {};\r\nconst paymentMethod = localStorage.getItem(\"paymentMethod\");\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n        paymentMethod: paymentMethod,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as actions from \"../actions/types\";\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case actions.PRODUCT_LIST_REQUEST:\r\n            return { ...state, loading: true };\r\n        case actions.PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page,\r\n            };\r\n        case actions.PRODUCT_LIST_FAIL:\r\n            return { ...state, loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case actions.PRODUCT_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case actions.PRODUCT_DETAILS_SUCCESS:\r\n            return { ...state, loading: false, product: action.payload };\r\n        case actions.PRODUCT_DETAILS_FAIL:\r\n            return { ...state, loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actions.PRODUCT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case actions.PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case actions.PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actions.PRODUCT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case actions.PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case actions.PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case actions.PRODUCT_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case actions.PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case actions.PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case actions.PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case actions.PRODUCT_UPDATE_RESET:\r\n            return { product: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actions.PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true };\r\n        case actions.PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case actions.PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case actions.PRODUCT_CREATE_REVIEW_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productTopReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case actions.PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case actions.PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload };\r\n        case actions.PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as actions from \"../actions/types\";\r\n\r\nexport const cartReducer = (\r\n    state = { cartItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case actions.CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const doesExists = state.cartItems.find(\r\n                (product) => product._id == item._id\r\n            );\r\n\r\n            if (doesExists) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((cartItem) =>\r\n                        cartItem._id === doesExists._id ? item : cartItem\r\n                    ),\r\n                };\r\n            } else {\r\n                return { ...state, cartItems: [...state.cartItems, item] };\r\n            }\r\n        case actions.CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: [\r\n                    ...state.cartItems.filter(\r\n                        ({ _id }) => _id !== action.payload.id\r\n                    ),\r\n                ],\r\n            };\r\n        case actions.CART_SAVE_SHIPPING_ADDRESS:\r\n            return { ...state, shippingAddress: action.payload };\r\n        case actions.CART_SAVE_PAYMENT_METHOD:\r\n            return { ...state, paymentMethod: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as actions from \"../actions/types\";\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actions.USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case actions.USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case actions.USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case actions.USER_LOGOUT:\r\n            return { loading: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegistrationReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actions.USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case actions.USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case actions.USER_REGISTER_FAIL:\r\n            console.log(action);\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case actions.USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case actions.USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case actions.USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case actions.USER_DETAILS_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actions.USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true };\r\n        case actions.USER_UPDATE_PROFILE_SUCCESS:\r\n            return { user: action.payload, success: true };\r\n        case actions.USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case actions.USER_UPDATE_PROFILE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case actions.USER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case actions.USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case actions.USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actions.USER_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case actions.USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case actions.USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case actions.USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case actions.USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case actions.USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case actions.USER_UPDATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as actions from \"../actions/types\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actions.ORDER_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case actions.ORDER_CREATE_SUCCESS:\r\n            return { loading: false, success: true, order: action.payload };\r\n        case actions.ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { orderItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case actions.ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case actions.ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload };\r\n        case actions.ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actions.ORDER_PAY_REQUEST:\r\n            return { loading: true };\r\n        case actions.ORDER_PAY_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case actions.ORDER_PAY_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case actions.ORDER_PAY_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case actions.ORDER_LIST_MY_REQUEST:\r\n            return { loading: true };\r\n        case actions.ORDER_LIST_MY_SUCCESS:\r\n            return { loading: false, orders: action.payload };\r\n        case actions.ORDER_LIST_MY_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case actions.ORDER_LIST_MY_RESET:\r\n            return { orders: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case actions.ORDER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case actions.ORDER_LIST_SUCCESS:\r\n            return { loading: false, orders: action.payload };\r\n        case actions.ORDER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actions.ORDER_DELIVER_REQUEST:\r\n            return { loading: true };\r\n        case actions.ORDER_DELIVER_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case actions.ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case actions.ORDER_DELIVER_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}